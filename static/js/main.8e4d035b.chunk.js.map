{"version":3,"sources":["Components/Main Pages/Home.jsx","Components/Main Pages/About.jsx","Components/Main Pages/Knowledge.jsx","Components/Navbar/Navbar.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","height","width","backgroundColor","color","fullBox","Home","styles","Box","pl","className","Grid","container","direction","justify","mb","Typography","variant","centeredPic","display","justifyContent","alignItems","picture","border","center","About","style","paddingRight","pb","textAlign","maxWidth","overflow","loadBar","transition","descriptions","SkillBox","props","flexDirection","icon","name","description","SkillBar","useState","loader","loadEffect","useEffect","level","wrap","mt","pr","minHeight","marginRight","fillBox","alignContent","NavBarButton","to","link","Navbar","AppBar","mainGrid","mainBox","marginTop","App","item","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8e4d035b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Box, Grid, Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: '100%',\r\n        width: '100%',\r\n        backgroundColor: '#1b1b1b',\r\n        color: 'white'\r\n    },\r\n    fullBox: {\r\n        width: '100%',\r\n        height: '100%',\r\n    }\r\n})\r\n\r\nexport default function Home(){\r\n    \r\n    const styles = useStyles()\r\n\r\n    return(\r\n        <Box pl='13vw' className={styles.root}>\r\n            <Grid container direction='column' justify='center' className={styles.fullBox}>\r\n                <Box mb={6}>\r\n                    <Typography variant='h4' >\r\n                        Hello, My Name Is\r\n                    </Typography>\r\n                </Box>\r\n                <Box mb={4} color='orange'>\r\n                    <Typography variant='h2'>\r\n                        Devon\r\n                    </Typography>\r\n                </Box>\r\n                <Box mb={4}>\r\n                    <Typography variant='h4'>\r\n                        I am a Full Stack Web Developer\r\n                    </Typography>\r\n                </Box>\r\n                \r\n            </Grid>\r\n        </Box>\r\n    )\r\n}","import React from 'react'\r\nimport { Box, Grid, Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles({\r\n    centeredPic: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    picture: {\r\n        width: '70%',\r\n        height: '70%',\r\n        border: '1px solid black'\r\n    },\r\n    fullBox: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    center: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    }\r\n})\r\n\r\nexport default function About(){\r\n    \r\n    const styles = useStyles()\r\n\r\n    return(\r\n        <Grid className={styles.fullBox} justify='space-between' container>\r\n            <Box className={styles.centeredPic} width='50%'>\r\n                <Box className={styles.picture}>\r\n                    Picture did not load\r\n                </Box>\r\n            </Box>\r\n            <Box width='50%'>\r\n                <Grid container direction='column' style={{paddingRight: '15vw'}} className={[styles.fullBox , styles.center]}>\r\n                    <Box width='100%' pb={5} textAlign='right'>\r\n                        <Typography variant='h2'>\r\n                            About Me\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box textAlign='right'>\r\n                        <Typography variant='h5'>Full Stack Web Developer with a background in Information Technology and life-long dedication to learning. Effective at combining creativity and problem solving to develop user-friendly applications. Known among staff for strong wit and attention to detail no matter the complexity of the project. 3+ years of expierenced programming.</Typography>\r\n                    </Box>\r\n\r\n                </Grid>\r\n            </Box>\r\n        </Grid>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Box, Grid, Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\n//icon imports\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: '100%',\r\n        maxWidth: '100%',\r\n        backgroundColor: '#1b1b1b',\r\n        color: 'white',\r\n        overflow: 'auto'\r\n    },\r\n    fullBox: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    loadBar: {\r\n        transition: 'all .5s',\r\n    }\r\n})\r\n\r\nconst descriptions = {\r\n    Languages: 'My primary tech stack is Node/Express with apollo-GraphQL and Mongoose server side and React using Apollo-Client for GraphQL client side with Material-UI for styling. I have also worked with some PHP and MYSQL.',\r\n    Frameworks: 'My most used Language/Framework is React. It is what im most proficient in. I have spent years learning the best practices and learning new cleaner ways to run code. I have also learned some Vue.',\r\n    Packages: 'I have used multiple popular NPM packages in projects that ive worked on. Some of the larger ones include Stripe, Axios/Ajax, Apollo-Client with Apollo-React-Hooks for client side graphQL and Material-ui',\r\n    Server: 'I host most of my websites and projects through azure. I have some experience with AWS but not a lot. I also use Heroku for testing. For smaller projects i have rented server space manually and have also hosted my own servers. Having a background in IT allows me to set up my own Webservers when neccesary.',\r\n    version: 'I have spent a lot of time using Github even when im solo programming. I follow best practices and always make sure to have a healthy commit history. At this point github is second nature to me and a must have on all my projects.',\r\n    task: 'I have used Asana for some larger projects ive worked on and generally use trello for smaller projects. I find Asana to have more depth and features but trello is much easier to use and navigate and better when extra features are not needed.'\r\n}\r\n\r\nfunction SkillBox(props){\r\n    return(\r\n        <Box display='flex' flexDirection='column' width='30%' height='250px'>\r\n            <Box display='flex' pb={2}>\r\n                <Box display='flex' justifyContent='center' alignItems='center'>\r\n                    {props.icon}\r\n                </Box>\r\n                <Box pl={3}>\r\n                    <Typography variant='h5'>\r\n                    {props.name}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            <Box color='white'>\r\n                <Typography variant='h6'>\r\n                    {props.description}\r\n                </Typography>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nfunction SkillBar(props){\r\n\r\n    const styles = useStyles()\r\n\r\n    let [ loader, loadEffect ] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        loadEffect(true)\r\n    },[])\r\n\r\n    return(\r\n        <Grid style={{width: '45%', paddingRight: '5%'}} direction='column'>\r\n            <Box color='white'>\r\n    <Typography variant='h6'>{props.name}</Typography>\r\n            </Box>\r\n            <Box height='20px' width='100%' style={{backgroundColor:'gray'}}>\r\n                <Box width='80%' height='100%' style={loader === false ? {backgroundColor: 'orange', width: '0%'} : {backgroundColor:'orange', width: props.level, transition: 'all 1s'}}>\r\n                    \r\n                </Box>\r\n            </Box>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default function Home(){\r\n    \r\n    const styles = useStyles()\r\n\r\n    return(\r\n        <Box pl='13vw' className={styles.root}>\r\n            <Grid container direction='column' wrap='nowrap' className={styles.fullBox}>\r\n                <Box color='white' mt={6}>\r\n                    <Typography variant='h2'>\r\n                        Skill Set\r\n                    </Typography>\r\n                </Box>\r\n                <Box color='orange' width='100%' height='403' mt={3}>\r\n                    <Grid className={styles.fullBox} container>\r\n                        <SkillBox icon={<CodeIcon/>} description={descriptions.Languages} name='Languages'/>\r\n                        <SkillBox icon={<SettingsIcon/>} description={descriptions.Frameworks} name='Frameworks'/>\r\n                        <SkillBox icon={<FolderIcon/>} description={descriptions.Packages} name='Packages'/>\r\n                        <SkillBox icon={<StorageIcon/>} description={descriptions.Server} name='Server/Hosting'/>\r\n                        <SkillBox icon={<GitHubIcon/>} description={descriptions.version} name='Version Control'/>\r\n                        <SkillBox icon={<FormatListNumberedIcon/>} description={descriptions.task} name='Task Management'/>\r\n                    </Grid>\r\n                </Box>\r\n                <Box color='orange' pr='10vw' mb={3} mt={3}>\r\n                    <Grid container>\r\n                    {/* Frameworks */}\r\n\r\n                    <Box pb={3} width='100%' textAlign='center' color='white'><Typography variant='h4'>Frameworks</Typography></Box>\r\n\r\n                    <SkillBar name='React' level='95%'/>\r\n                    <SkillBar name='Vue' level='30%'/>\r\n                    <SkillBar name='Express' level='80%'/>\r\n                \r\n                    </Grid>\r\n                </Box>\r\n\r\n                <Box color='orange' pr='10vw' mb={3} mt={3}>\r\n                    <Grid container>\r\n                        {/* Languages */}\r\n\r\n                        <Box pb={3} width='100%' textAlign='center' color='white'><Typography variant='h4'>Languages</Typography></Box>\r\n\r\n                        <SkillBar name='Javascript' level='95%'/>\r\n                        <SkillBar name='CSS' level='75%'/>\r\n                        <SkillBar name='HTML' level='85%'/>\r\n                        <SkillBar name='Node' level='80%'/>\r\n                        <SkillBar name='MongoDB' level='85%'/>\r\n                        <SkillBar name='MySQL' level='60%'/>\r\n                        <SkillBar name='GraphQL' level='75%'/>\r\n                        <SkillBar name='PHP' level='40%'/>\r\n                    </Grid>\r\n                </Box>\r\n\r\n                <Box color='orange' pr='10vw' mb={3} mt={3}>\r\n                    <Grid container>\r\n                    {/* Packages */}\r\n                    <Box pb={3} width='100%' textAlign='center' color='white'><Typography variant='h4'>Packages</Typography></Box>\r\n                    <SkillBar name='Material-UI' level='90%'/>\r\n                    <SkillBar name='mongoose' level='90%'/>\r\n                    <SkillBar name='Apollo-React' level='80%'/>\r\n                    <SkillBar name='Stripe' level='85%'/>\r\n                    <SkillBar name='Axios' level='80%'/>\r\n                    <SkillBar name='Ajax' level='75%'/>\r\n                    </Grid>\r\n                </Box>\r\n                <Box  color='orange' pr='10vw' mb={3} mt={3}>\r\n                    <Grid container>\r\n                        {/* WebHosting/Servers */}\r\n                        <Box pb={3} width='100%' textAlign='center' color='white'><Typography variant='h4'>Webhosting/Servers</Typography></Box>\r\n                        <SkillBar name='Azure' level='75%'/>\r\n                        <SkillBar name='AWS' level='35%'/>\r\n                        <SkillBar name='Heroku' level='80%'/>\r\n                        <SkillBar name='Linux(CentOS7)' level='50%'/>\r\n                    </Grid>\r\n                </Box>\r\n\r\n                <Box color='orange' pr='10vw' mb={3} mt={3}>\r\n                    <Grid container>\r\n                    {/* Version Control */}\r\n                    <Box pb={3} width='100%' textAlign='center' color='white'><Typography variant='h4'>Version Control</Typography></Box>\r\n                    <SkillBar name='Github/Git' level='90%'/>\r\n                    </Grid>\r\n                </Box>\r\n                    \r\n                <Box color='orange' pr='10vw' mb={6} mt={3}>\r\n                    <Grid container>\r\n                        {/* Task Management */}\r\n                        <Box pb={3} width='100%' textAlign='center' color='white'><Typography variant='h4'>Task Management</Typography></Box>\r\n                        <SkillBar name='Asana' level='75%'/>\r\n                        <SkillBar name='Trello' level='75%'/>\r\n                        <SkillBar name='Agile' level='60%'/>\r\n                        <SkillBar name='Scrum' level='60%'/>\r\n                    </Grid>\r\n                </Box>\r\n\r\n\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}","import React from 'react'\r\nimport { AppBar, Box, Typography, Grid } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minHeight: '10vh',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.85)'\r\n    },\r\n    name: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        marginRight: '100px'\r\n    },\r\n    fillBox: {\r\n        height: '10vh',\r\n        width: '100%',\r\n        alignContent: 'center'\r\n    }\r\n})\r\n\r\n\r\nfunction NavBarButton(props){\r\n    return(\r\n        \r\n            <Link to={props.link} className='NavLink'>\r\n                    <Typography variant='h6'>\r\n                        {props.name}\r\n                    </Typography>\r\n            </Link>\r\n    )\r\n}\r\n\r\n\r\nexport default function Navbar(){\r\n\r\n    const styles = useStyles()\r\n\r\n    return(\r\n        <AppBar className={styles.root}>\r\n            <Grid container justify='center' className={styles.fillBox}>\r\n                <Box className={styles.name}>\r\n                    <Typography variant='h2'>\r\n                        Devon Owen\r\n                    </Typography>\r\n                </Box>\r\n                <Box>\r\n                    <Grid className={styles.fillBox} container>\r\n                        <NavBarButton name='Welcome' link='/' />\r\n                        <NavBarButton name='About Me' link='/about' />\r\n                        <NavBarButton name='Knowledge' link='/knowledge' />\r\n                        <NavBarButton name='Experience' link='/experience' />\r\n                        <NavBarButton name='Portfolio' link='/portfolio' />\r\n                        <NavBarButton name='References' link='/references' />\r\n                        <NavBarButton name='Contact' link='/contact' />\r\n                    </Grid>\r\n                </Box>\r\n            </Grid>\r\n        </AppBar>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport { Box, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Route } from 'react-router-dom';\n\nimport Home from './Components/Main Pages/Home';\nimport About from './Components/Main Pages/About';\nimport Knowledge from './Components/Main Pages/Knowledge';\n\n\nimport Navbar from './Components/Navbar/Navbar';\n\nconst useStyles = makeStyles({\n  mainGrid: {\n    width: '100vw',\n    height: '100vh',\n    overflow: 'hidden'\n  },\n  mainBox: {\n    height: '90vh',\n    marginTop: '10vh',\n    width: '100%'\n  }\n})\n\nfunction App() {\n\n  const styles = useStyles()\n\n  return (\n    \n    <Grid container direction='column' className={styles.mainGrid}>\n      <Navbar item/>\n      <Box className={styles.mainBox} item>\n        {/* Welcome page route */}\n        <Route exact path='/'>\n          <Home/>\n        </Route>\n        {/* About page route */}\n        <Route exact path='/about'>\n          <About/>\n        </Route>\n        {/* Knowledge page Route */}\n        <Route exact path='/knowledge'>\n          <Knowledge/>\n        </Route>\n        {/* */}\n\n        {/* */}\n\n        {/* */}\n\n        {/* */}\n\n        {/* */}\n      </Box>\n    </Grid>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename='/2020portfoliohosted'>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}